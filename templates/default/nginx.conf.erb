
#user  nobody;
worker_processes   <%= node['nginx']['worker_processes'] %>;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  <%= node['nginx']['worker_connections'] %>;
}


http {
    passenger_root <%= @passenger_root %>;
    passenger_ruby <%= @passenger_ruby %>;

    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    gzip  on;

    #server {
        #listen       80;
        
        #server_name 127.0.0.1;
        
        #charset koi8-r;
        
        #access_log  logs/host.access.log  main;
        
        #location / {
        #    root   html;
        #    index  index.html index.htm;
        #}
        
        #error_page  404              /404.html;
        
        # redirect server error pages to the static page /50x.html
        #
        #error_page   500 502 503 504  /50x.html;
        #location = /50x.html {
        #    root   html;
        #}
        
        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}
        
        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}
        
        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    #}

    # normal app without ssl cert

    #server {
    #    listen 80;
    #    server_name demo.com;
    #    
    #    root /home/username/rails/demo/public; # <-- be sure to point to 'public'
    #    passenger_app_root /home/username/rails/demo;
    #    passenger_enabled on;
    #    rack_env production;
    #}

    # app with ssl cert, redirect http to https

    #server {
    #listen 80;
    #server_name secure.com;
    #
    #root /home/username/rails/secureapp/public; # <-- be sure to point to 'public'
    #passenger_app_root /home/username/rails/secureapp;
    #passenger_enabled on;
    #rack_env production;
    #return 301 https://$host$request_uri;
    #}
    
    #server {
    #listen 443 ssl;
    #server_name secure.com;
    #
    #ssl_certificate /etc/letsencrypt/live/secure.com/fullchain.pem;
    #ssl_certificate_key /etc/letsencrypt/live/secure.com/privkey.pem;
    #
    #ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    #ssl_prefer_server_ciphers on;
    #ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';  
    #
    #root /home/username/rails/secureapp/public; # <-- be sure to point to 'public'
    #    passenger_app_root /home/username/rails/secureapp;
    #    passenger_enabled on;
    #    rack_env production;
    #}

    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

    # Include virtual host configs
    include sites-enabled/*;

}
